Bool :: union {false, true}

& :: (a, b: Bool) -> Bool
{
 fork a
 {
  false: false,
  true:  b
  }
 }

| :: (a, b: Bool) -> Bool
{
 fork a
 {
  true:  true,
  false: b,
  }
 }

andWithFalse :: (a: Bool) -> (a & false = false)
{
 fork a
 {
  false: truth,
  true: truth,
  }
 }

andAssociative :: (a, b, c: Bool) -> ((a & b) & c = a & b & c)
{
 fork a
 {
  false: truth,
  true : truth,
  }
 }
