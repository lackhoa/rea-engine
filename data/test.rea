#load "boolean.rea"
#load "nat.rea"

testLocalVariable :: (x: Nat) -> Nat
{
 a := 3;
 a * x;
 }
check truth: testLocalVariable(2) = 6

;; testCurrying :: (a: Nat) -> (b, c: Nat) -> a + (b + c) = (a + b) + c
;; {
;;  fork a
;;  {
;;   0:
;;   out :: (b, c: Nat) { plusAssociative(b, c) };
;;   out,

;;   s(a'): plusCommutative,
;;   }
;;  }
