#load "boolean.rea"
#load "nat.rea"

testComplexFork :: (a, b: Nat) -> Nat
{
 fork a+b
 {
  0:    0,
  s(n): n,
  }
 }
check truth: testComplexFork(0, 0) = 0;
check truth: testComplexFork(1, 1) = 1;

testLocalVariable :: (x: Nat) -> Nat
{
 a := 3;
 b := 2;
 a + x + b;
 }
check truth: testLocalVariable(1) = 6;

testCurrying :: (a: Nat) -> (b, c: Nat) -> a + (b + c) = (a + b) + c
{
 fork a
 {
  0:
  out :: (b, c: Nat) { plusAssociative(b, c) };
  out,

  s(a'): plusCommutative,
  }
 }
