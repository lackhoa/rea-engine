type Int
type =(Int Int)
axiom eqTran((a: Int) (b: Int) (aeb: a = b) (bec: b = c)) : (a = c)

defun eqTran3((aeb: a = b) (bec: b = c) (ced: c = d)) : (a = b)
{
 aec: (a = c) = eqTran(aeb bec);
 return eqTran(aec, ced);
 }

operator binary +
axiom +comm(a b) : (a + b) = (b + a)
+(a b c) = +(c b a)
