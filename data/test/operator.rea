typedef Bool
{
 | F
 | T
 }

define &(a: Bool, b: Bool) : Bool
{
 switch a
 {
  | F { F }
  | T { b }
  }
 }

define |(a: Bool, b: Bool) : Bool
{
 switch a
 {
  | T { T }
  | F { b }
  }
 }

printRaw((F & T) | T)
printRaw(&(T, |(F,T,),))
printRaw(&(T, |(F,T)))
printRaw((switch T {| T { & } | F { | } })(T, F))
print((switch T {| T { & } | F { | } })(T, F))

;; assert(&(T, |(F,T,),) = &(T, |(F,T)))
;; assert((switch T {| T { & } | F { | } })(T, F) = F)
;; assert(F & T | T = (F & T) | T)
;; assertFalse(F & T | T = F & (T | T))
